//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2019.03.14 at 03:14:29 PM PDT
//


package mqcap.xsd;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>
 * Java class for dataTypeEnumType.
 * </p>
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * </p>
 * 
 * <pre>
 * &lt;simpleType name="dataTypeEnumType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="smallint"/&gt;
 *     &lt;enumeration value="integer"/&gt;
 *     &lt;enumeration value="bigint"/&gt;
 *     &lt;enumeration value="float"/&gt;
 *     &lt;enumeration value="real"/&gt;
 *     &lt;enumeration value="double"/&gt;
 *     &lt;enumeration value="decimal"/&gt;
 *     &lt;enumeration value="decfloat"/&gt;
 *     &lt;enumeration value="char"/&gt;
 *     &lt;enumeration value="varchar"/&gt;
 *     &lt;enumeration value="longvarchar"/&gt;
 *     &lt;enumeration value="bitchar"/&gt;
 *     &lt;enumeration value="bitvarchar"/&gt;
 *     &lt;enumeration value="bitlongvarchar"/&gt;
 *     &lt;enumeration value="graphic"/&gt;
 *     &lt;enumeration value="vargraphic"/&gt;
 *     &lt;enumeration value="longvargraphic"/&gt;
 *     &lt;enumeration value="time"/&gt;
 *     &lt;enumeration value="timestamp"/&gt;
 *     &lt;enumeration value="date"/&gt;
 *     &lt;enumeration value="rowid"/&gt;
 *     &lt;enumeration value="blob"/&gt;
 *     &lt;enumeration value="clob"/&gt;
 *     &lt;enumeration value="dbclob"/&gt;
 *     &lt;enumeration value="xml"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "dataTypeEnumType")
@XmlEnum
public enum DataTypeEnumType {

  @XmlEnumValue("smallint")
  SMALLINT("smallint"), @XmlEnumValue("integer")
  INTEGER("integer"), @XmlEnumValue("bigint")
  BIGINT("bigint"), @XmlEnumValue("float")
  FLOAT("float"), @XmlEnumValue("real")
  REAL("real"), @XmlEnumValue("double")
  DOUBLE("double"), @XmlEnumValue("decimal")
  DECIMAL("decimal"), @XmlEnumValue("decfloat")
  DECFLOAT("decfloat"), @XmlEnumValue("char")
  CHAR("char"), @XmlEnumValue("varchar")
  VARCHAR("varchar"), @XmlEnumValue("longvarchar")
  LONGVARCHAR("longvarchar"), @XmlEnumValue("bitchar")
  BITCHAR("bitchar"), @XmlEnumValue("bitvarchar")
  BITVARCHAR("bitvarchar"), @XmlEnumValue("bitlongvarchar")
  BITLONGVARCHAR("bitlongvarchar"), @XmlEnumValue("graphic")
  GRAPHIC("graphic"), @XmlEnumValue("vargraphic")
  VARGRAPHIC("vargraphic"), @XmlEnumValue("longvargraphic")
  LONGVARGRAPHIC("longvargraphic"), @XmlEnumValue("time")
  TIME("time"), @XmlEnumValue("timestamp")
  TIMESTAMP("timestamp"), @XmlEnumValue("date")
  DATE("date"), @XmlEnumValue("rowid")
  ROWID("rowid"), @XmlEnumValue("blob")
  BLOB("blob"), @XmlEnumValue("clob")
  CLOB("clob"), @XmlEnumValue("dbclob")
  DBCLOB("dbclob"), @XmlEnumValue("xml")
  XML("xml");
  private final String value;

  DataTypeEnumType(String v) {
    value = v;
  }

  public String value() {
    return value;
  }

  public static DataTypeEnumType fromValue(String v) {
    for (DataTypeEnumType c : DataTypeEnumType.values()) {
      if (c.value.equals(v)) {
        return c;
      }
    }
    throw new IllegalArgumentException(v);
  }

}
