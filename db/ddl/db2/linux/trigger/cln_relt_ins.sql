DROP TRIGGER CWSINT.trg_cln_relt_ins;

CREATE TRIGGER CWSINT.trg_cln_relt_ins
AFTER INSERT ON CWSINT.CLN_RELT
REFERENCING NEW AS NROW
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
MERGE INTO CWSRS1.CLN_RELT tgt USING ( 
SELECT
	nrow.IDENTIFIER,
	nrow.ABSENT_CD,
	nrow.CLNTRELC,
	nrow.END_DT,
	nrow.SAME_HM_CD,
	nrow.START_DT,
	nrow.LST_UPD_ID,
	nrow.LST_UPD_TS,
	nrow.FKCLIENT_T,
	nrow.FKCLIENT_0
	FROM sysibm.sysdummy1
) X ON (tgt.IDENTIFIER = X.IDENTIFIER)
WHEN MATCHED THEN UPDATE SET 
	IDENTIFIER = x.IDENTIFIER,
	ABSENT_CD = x.ABSENT_CD,
	CLNTRELC = x.CLNTRELC,
	END_DT = x.END_DT,
	SAME_HM_CD = x.SAME_HM_CD,
	START_DT = x.START_DT,
	LST_UPD_ID = x.LST_UPD_ID,
	LST_UPD_TS = x.LST_UPD_TS,
	FKCLIENT_T = x.FKCLIENT_T,
	FKCLIENT_0 = x.FKCLIENT_0,
	IBMSNAP_OPERATION = 'I',
	IBMSNAP_LOGMARKER = current timestamp
WHEN NOT MATCHED THEN INSERT (
	IDENTIFIER,
	ABSENT_CD,
	CLNTRELC,
	END_DT,
	SAME_HM_CD,
	START_DT,
	LST_UPD_ID,
	LST_UPD_TS,
	FKCLIENT_T,
	FKCLIENT_0,
	IBMSNAP_OPERATION,
	IBMSNAP_LOGMARKER
) VALUES (
	x.IDENTIFIER,
	x.ABSENT_CD,
	x.CLNTRELC,
	x.END_DT,
	x.SAME_HM_CD,
	x.START_DT,
	x.LST_UPD_ID,
	x.LST_UPD_TS,
	x.FKCLIENT_T,
	x.FKCLIENT_0,
	'I',
	current timestamp
);
END
