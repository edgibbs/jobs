DROP TRIGGER CWSINT.trg_claddr_ins;

CREATE TRIGGER CWSINT.trg_claddr_ins
AFTER INSERT ON CWSINT.CL_ADDRT
REFERENCING NEW AS NROW
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
	MERGE INTO CWSRS1.CL_ADDRT cla USING (
		SELECT nrow.IDENTIFIER,
			nrow.ADDR_TPC,
			nrow.BK_INMT_ID,
			nrow.EFF_END_DT,
			nrow.EFF_STRTDT,
			nrow.LST_UPD_ID,
			nrow.LST_UPD_TS,
			nrow.FKADDRS_T,
			nrow.FKCLIENT_T,
			nrow.HOMLES_IND,
			nrow.FKREFERL_T
		FROM sysibm.sysdummy1
	) X ON (cla.IDENTIFIER = X.IDENTIFIER) 
	WHEN MATCHED THEN UPDATE SET 
	    ADDR_TPC = x.ADDR_TPC,
		BK_INMT_ID = x.BK_INMT_ID,
		EFF_END_DT = x.EFF_END_DT,
		EFF_STRTDT = x.EFF_STRTDT,
		LST_UPD_ID = x.LST_UPD_ID,
		LST_UPD_TS = x.LST_UPD_TS,
		FKADDRS_T = x.FKADDRS_T,
		FKCLIENT_T = x.FKCLIENT_T,
		HOMLES_IND = x.HOMLES_IND,
		FKREFERL_T = x.FKREFERL_T,
		IBMSNAP_OPERATION = 'I',
		IBMSNAP_LOGMARKER = current timestamp
	WHEN NOT MATCHED THEN INSERT(
	    IDENTIFIER,
		ADDR_TPC,
		BK_INMT_ID,
		EFF_END_DT,
		EFF_STRTDT,
		LST_UPD_ID,
		LST_UPD_TS,
		FKADDRS_T,
		FKCLIENT_T,
		HOMLES_IND,
		FKREFERL_T,
		IBMSNAP_OPERATION,
		IBMSNAP_LOGMARKER)
	VALUES(x.IDENTIFIER,
		x.ADDR_TPC,
		x.BK_INMT_ID,
		x.EFF_END_DT,
		x.EFF_STRTDT,
		x.LST_UPD_ID,
		x.LST_UPD_TS,
		x.FKADDRS_T,
		x.FKCLIENT_T,
		x.HOMLES_IND,
		x.FKREFERL_T,
		'I',
		current timestamp);
END
